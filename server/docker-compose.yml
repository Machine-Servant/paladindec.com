version: '3.8'

services:
  paladindeck_server:
    container_name: paladindeck-server
    image: paladindeck-server
    build:
      context: .
      dockerfile: ./Dockerfile
    command: npm run start:debug
    env_file:
      - .env
    ports:
      - '3000:3000'
      - '9229:9229'
    depends_on:
      - postgres
      - redis
    networks:
      - nestjs-network
    volumes:
      - .:/usr/src/app
      - .downloads:/tmp/downloads
      - .data:/tmp/data
      - paladindeckserver_node_modules:/usr/src/app/node_modules
    restart: unless-stopped

  redis:
    image: redis:6.2-alpine
    container_name: redis
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass password
    networks:
      - nestjs-network
    volumes:
      - redis:/data

  postgres:
    image: postgres:14.1-alpine
    container_name: postgres
    env_file:
      - .env
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    networks:
      - nestjs-network
    restart: always

  adminer:
    image: adminer
    ports:
      - '8080:8080'
    networks:
      - nestjs-network

networks:
  nestjs-network:

volumes:
  paladindeckserver_node_modules:
  postgres:
  redis:
    driver: local