// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator nestgraphql {
  provider = "node node_modules/prisma-nestjs-graphql"
  output   = "../src/@generated/prisma-nestjs-graphql"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model ScryfallSet {
  id            String    @id @default(uuid()) @db.Uuid
  code          String    @unique
  mtgoCode      String?   @unique
  arenaCode     String?   @unique
  tcgPlayerId   Int?
  name          String
  setType       String
  releasedAt    DateTime?
  blockCode     String?
  block         String?
  parentSetCode String?
  cardCount     Int
  printedSize   Int?
  isDigital     Boolean
  isFoilOnly    Boolean
  isNonFoilOnly Boolean
  scryfallUri   String
  uri           String
  iconSvgUri    String
  searchUri     String

  // Relations
  cards ScryfallCard[]

  @@index([code])
}

model ScryfallRelatedCard {
  id          String       @id @default(uuid()) @db.Uuid
  reference   ScryfallCard @relation(name: "RelatedCard_reference", fields: [referenceId], references: [id], onDelete: Cascade)
  referenceId String       @db.Uuid
  card        ScryfallCard @relation(name: "RelatedCard_card", fields: [cardId], references: [id], onDelete: Cascade)
  cardId      String       @db.Uuid
  component   String
  name        String
  typeLine    String
  uri         String
}

model ScryfallCardFace {
  id              String       @id @default(uuid()) @db.Uuid
  card            ScryfallCard @relation(fields: [cardId], references: [id], onDelete: SetNull)
  cardId          String       @db.Uuid
  artist          String?
  cmc             Float?       @db.Real
  colorIndicator  String[]
  colors          String[]
  flavorText      String?
  illustrationId  String?      @db.Uuid
  imageUris       Json?
  layout          String?
  loyalty         String?
  manaCost        String?
  name            String
  oracleId        String?      @db.Uuid
  oracleText      String?
  power           String?
  printedName     String?
  printedText     String?
  printedTypeLine String?
  toughness       String?
  typeLine        String?
  watermark       String?
}

model ScryfallCard {
  // Core Fields
  id                String  @id @default(uuid()) @db.Uuid
  arenaId           Int?
  lang              String
  mtgoId            Int?
  mtgoFoilId        Int?
  multiverseIds     Int[]
  tcgplayerId       Int?
  tcgplayerEtchedId Int?
  cardmarketId      Int?
  oracleId          String?
  printsSearchUri   String
  rulingUri         String?
  scryfallUri       String
  uri               String

  // Gameplay Fields
  allParts       Json[]
  cardFacesRaw   Json[]
  cmc            Float?   @db.Real
  colorIdentity  String[]
  colorIndicator String[]
  colors         String[]
  edhrecRank     Int?
  handModifier   String?
  keywords       String[]
  layout         String
  legalities     Json
  lifeModifier   String?
  loyalty        String?
  manaCost       String?
  name           String
  oracleText     String?
  oversized      Boolean
  power          String?
  producedMana   String[]
  reserved       Boolean
  toughness      String?
  typeLine       String?

  // Print Fields
  artist          String?
  booster         Boolean
  borderColor     String
  cardBackId      String?
  collectorNumber String
  contentWarning  Boolean?
  digital         Boolean
  finishes        String[]
  flavorName      String?
  frameEffects    String[]
  frame           String
  fullArt         Boolean
  games           String[]
  highresImage    Boolean
  illustrationId  String?
  imageStatus     String
  imageUris       Json?
  prices          Json
  printedName     String?
  printedText     String?
  printedTypeLine String?
  promo           Boolean
  promoTypes      String[]
  purchaseUris    Json?
  rarity          String
  relatedUris     Json
  releasedAt      DateTime
  reprint         Boolean
  scryfallSetUri  String
  setCode         String
  setName         String
  setSearchUri    String
  setType         String
  setUri          String
  storySpotlight  Boolean
  textless        Boolean
  variation       Boolean
  varationOf      String?
  securityStamp   String?
  watermark       String?

  // Relations
  set           ScryfallSet           @relation(fields: [setId], references: [id], onDelete: Cascade)
  setId         String                @db.Uuid
  relatedTo     ScryfallRelatedCard[] @relation("RelatedCard_card")
  referencedBy  ScryfallRelatedCard[] @relation("RelatedCard_reference")
  cardFaces     ScryfallCardFace[]
  scryfallPrice ScryfallPrice[]

  @@index([name])
}

model ScryfallPrice {
  id   String   @id @default(uuid())
  date DateTime @db.Date

  eur       Float? @db.Real
  tix       Float? @db.Real
  usd       Float? @db.Real
  eurFoil   Float? @db.Real
  usdFoil   Float? @db.Real
  usdEtched Float? @db.Real

  // Relations
  card   ScryfallCard @relation(fields: [cardId], references: [id], onDelete: Cascade)
  cardId String       @db.Uuid
}
